"""empty message

Revision ID: c2936ba298a0
Revises: 8ef1dabe6f18
Create Date: 2018-10-29 13:57:05.992458

"""

# revision identifiers, used by Alembic.
revision = 'c2936ba298a0'
down_revision = '8ef1dabe6f18'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade():
    user_role = postgresql.ENUM('student', 'annotator', 'admin', 'super_admin', name='ROLE')
    user_role.create(op.get_bind())

    # ## commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'Course',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('slug', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        sa.UniqueConstraint('slug')
    )
    op.create_table(
        'Status',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('status', sa.Enum('unannotated', 'in-progress', 'annotated', name='STATUS'), nullable=True),
        sa.Column('sentence', sa.Integer(), nullable=True),
        sa.Column('user', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['sentence'], ['Sentence.id'], ),
        sa.ForeignKeyConstraint(['user'], ['User.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('sentence', 'user', name='unique_status')
    )
    op.drop_column(u'Doc', 'annotators')
    op.create_unique_constraint('unique_peak', 'Peak', ['token', 'user'])
    op.add_column(u'User', sa.Column('course', sa.Integer(), nullable=True))
    op.add_column(u'User', sa.Column('role', sa.Enum('student', 'annotator', 'admin', 'super_admin', name='ROLE'), nullable=True))
    op.create_foreign_key(None, 'User', 'Course', ['course'], ['id'])
    # ## end Alembic commands ###


def downgrade():
    # ## commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'User', type_='foreignkey')
    op.drop_column(u'User', 'role')
    op.drop_column(u'User', 'course')
    op.drop_constraint('unique_peak', 'Peak', type_='unique')
    op.add_column(u'Doc', sa.Column('annotators', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.drop_table('Status')
    op.drop_table('Course')
    # ## end Alembic commands ###

    user_role = postgresql.ENUM('student', 'annotator', 'admin', 'super_admin', name='ROLE')
    user_role.drop(op.get_bind())
